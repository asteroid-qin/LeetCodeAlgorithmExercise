//#include<iostream>
//#include<vector>
//using namespace std;
//
//class Solution {
//public:
//    // 目标：把一个数组中的0全部移到数组的最后，并且非零数原先的排列顺序不能改变
//    // 思路：使用双指针i、j遍历这个数组，i负责从前往后得到当前遍历的值，j从后往前放入0
//    // 如果不需要保持原先顺序不变，那i指向的值是0就和j指向的值互换，然后j--，如果i指向非0就++，一直持续i=j
//    // 这里需要保持原先的顺序，所以得换个思路：
//    // 用变量记录0的值，遇上非零数就把这个非零数进行偏移即可
//    // 如果当前数是0，用变量记录0的个数
//    // 如果当前数不是0，将当前数向前偏移，偏移量就是0的个数，再把当前值设为0
//    void moveZeroes(vector<int>& nums) {
//        // 记录0的个数，也就是偏移量
//        // 1230041059
//        int n = 0;
//
//        for (int i = 0; i < nums.size(); i++) {
//            if (nums[i] == 0) {
//                n++;
//            }
//            else {
//                // 把当前值进行偏转,注意这要在n不等于0的情况下开始
//                if (n != 0) {
//                    nums[i - n] = nums[i];
//                    nums[i] = 0;
//                }
//            }
//        }
//
//    }
//};
//
//int main() {
//	return 0;
//}