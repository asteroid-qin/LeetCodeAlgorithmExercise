//#include<iostream>
//using namespace std;
//
//class Solution {
//public:
//    // 目标：将一个数字每位相加，得到新的数，如此反复，需要算出运算得到的一位数
//    // 思路：准备一个变量，记录n每次循环的每位之和，每次循环开始前，判断这个数字是不是一位
//    // 一口气写出来的，这才算是简单题啊，希望能够一次过...
//    // 虽然是一次过了，但是效率奇低...(这里应该可以使用位运算提高效率..)
//    int addDigits(int num) {
//        // 需要有一个变量记录每轮的各位数之和
//        /*int sum = 0;
//
//        // 这里可以把判断这个数是不是个位数做成循环条件
//        // 这里只要判断是否除以10等于0即可（注意条件说了，num不是负数）
//        while (num / 10 != 0) {
//            // 开始计算整个每位数之和
//            while (num != 0) {
//                sum += num % 10;
//                num /= 10;
//            }
//            // 循环结束后，sum就是num各个位数的和
//            // 回到初始情况，继续执行，直到得到结果
//            num = sum;
//            sum = 0;
//        }
//
//        return num;*/
//
//
//        /*
//            想了很久，终于大概理解了
//            直接上代码（真的太妙了）
//        */
//        return (num - 1) % 9 + 1;
//    }
//};
//
//int main() {
//	return 0;
//}